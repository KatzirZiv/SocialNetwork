{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_URL\n  // Removed default Content-Type header to allow FormData\n});\n\n// Add a request interceptor to include the auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Auth endpoints\nexport const auth = {\n  login: credentials => api.post('/auth/login', credentials, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }),\n  register: userData => api.post('/auth/register', userData, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }),\n  getProfile: () => api.get('/auth/me')\n};\n\n// User endpoints\nexport const users = {\n  getAll: () => api.get('/users'),\n  getById: id => api.get(`/users/${id}`),\n  update: (id, data) => {\n    console.log('API Update Request - ID:', id);\n    console.log('API Update Request - Data:', data);\n    if (data instanceof FormData) {\n      // Log FormData contents\n      for (let pair of data.entries()) {\n        console.log('FormData entry:', pair[0], pair[1]);\n      }\n\n      // Ensure proper headers for multipart/form-data\n      return api.put(`/users/${id}`, data, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n    } else {\n      return api.put(`/users/${id}`, data, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n  },\n  delete: id => api.delete(`/users/${id}`),\n  follow: id => api.post(`/users/${id}/follow`),\n  unfollow: id => api.post(`/users/${id}/unfollow`),\n  sendFriendRequest: userId => api.post(`/users/${userId}/friend-request`),\n  acceptFriendRequest: userId => api.put(`/users/${userId}/accept-friend`),\n  rejectFriendRequest: userId => api.put(`/users/${userId}/reject-friend`),\n  removeFriend: userId => api.delete(`/users/${userId}/friend`),\n  getFriendRequests: () => api.get('/users/friend-requests')\n};\n\n// Group endpoints\nexport const groups = {\n  getAll: () => api.get('/groups'),\n  getById: id => api.get(`/groups/${id}`),\n  create: data => api.post('/groups', data, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }),\n  update: (id, data) => api.put(`/groups/${id}`, data, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }),\n  delete: id => api.delete(`/groups/${id}`),\n  join: id => api.post(`/groups/${id}/join`),\n  leave: id => api.post(`/groups/${id}/leave`)\n};\n\n// Post endpoints\nexport const posts = {\n  getAll: () => api.get('/posts'),\n  getById: id => api.get(`/posts/${id}`),\n  create: data => api.post('/posts', data),\n  // No Content-Type header, allows FormData\n  update: (id, data) => api.put(`/posts/${id}`, data, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }),\n  delete: id => api.delete(`/posts/${id}`),\n  like: id => api.post(`/posts/${id}/like`),\n  unlike: id => api.post(`/posts/${id}/unlike`),\n  comment: (id, data) => api.post(`/posts/${id}/comments`, data, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }),\n  addComment: (postId, content) => api.post(`/posts/${postId}/comments`, {\n    content\n  }, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n};\n\n// Message endpoints\nexport const messages = {\n  getAll: () => api.get('/messages'),\n  getConversation: userId => api.get(`/messages/${userId}`),\n  send: data => api.post('/messages', data, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }),\n  delete: id => api.delete(`/messages/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","auth","login","credentials","post","register","userData","getProfile","get","users","getAll","getById","id","update","data","console","log","FormData","pair","entries","put","delete","follow","unfollow","sendFriendRequest","userId","acceptFriendRequest","rejectFriendRequest","removeFriend","getFriendRequests","groups","join","leave","posts","like","unlike","comment","addComment","postId","content","messages","getConversation","send"],"sources":["C:/Users/katzi/OneDrive/מסמכים/EffiSocial/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  // Removed default Content-Type header to allow FormData\r\n});\r\n\r\n// Add a request interceptor to include the auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth endpoints\r\nexport const auth = {\r\n  login: (credentials) => api.post('/auth/login', credentials, { headers: { 'Content-Type': 'application/json' } }),\r\n  register: (userData) => api.post('/auth/register', userData, { headers: { 'Content-Type': 'application/json' } }),\r\n  getProfile: () => api.get('/auth/me'),\r\n};\r\n\r\n// User endpoints\r\nexport const users = {\r\n  getAll: () => api.get('/users'),\r\n  getById: (id) => api.get(`/users/${id}`),\r\n  update: (id, data) => {\r\n    console.log('API Update Request - ID:', id);\r\n    console.log('API Update Request - Data:', data);\r\n    \r\n    if (data instanceof FormData) {\r\n      // Log FormData contents\r\n      for (let pair of data.entries()) {\r\n        console.log('FormData entry:', pair[0], pair[1]);\r\n      }\r\n      \r\n      // Ensure proper headers for multipart/form-data\r\n      return api.put(`/users/${id}`, data, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n    } else {\r\n      return api.put(`/users/${id}`, data, {\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n    }\r\n  },\r\n  delete: (id) => api.delete(`/users/${id}`),\r\n  follow: (id) => api.post(`/users/${id}/follow`),\r\n  unfollow: (id) => api.post(`/users/${id}/unfollow`),\r\n  sendFriendRequest: (userId) =>\r\n    api.post(`/users/${userId}/friend-request`),\r\n  acceptFriendRequest: (userId) =>\r\n    api.put(`/users/${userId}/accept-friend`),\r\n  rejectFriendRequest: (userId) =>\r\n    api.put(`/users/${userId}/reject-friend`),\r\n  removeFriend: (userId) =>\r\n    api.delete(`/users/${userId}/friend`),\r\n  getFriendRequests: () =>\r\n    api.get('/users/friend-requests'),\r\n};\r\n\r\n// Group endpoints\r\nexport const groups = {\r\n  getAll: () => api.get('/groups'),\r\n  getById: (id) => api.get(`/groups/${id}`),\r\n  create: (data) => api.post('/groups', data, { headers: { 'Content-Type': 'application/json' } }),\r\n  update: (id, data) => api.put(`/groups/${id}`, data, { headers: { 'Content-Type': 'application/json' } }),\r\n  delete: (id) => api.delete(`/groups/${id}`),\r\n  join: (id) => api.post(`/groups/${id}/join`),\r\n  leave: (id) => api.post(`/groups/${id}/leave`),\r\n};\r\n\r\n// Post endpoints\r\nexport const posts = {\r\n  getAll: () => api.get('/posts'),\r\n  getById: (id) => api.get(`/posts/${id}`),\r\n  create: (data) => api.post('/posts', data), // No Content-Type header, allows FormData\r\n  update: (id, data) => api.put(`/posts/${id}`, data, { headers: { 'Content-Type': 'application/json' } }),\r\n  delete: (id) => api.delete(`/posts/${id}`),\r\n  like: (id) => api.post(`/posts/${id}/like`),\r\n  unlike: (id) => api.post(`/posts/${id}/unlike`),\r\n  comment: (id, data) => api.post(`/posts/${id}/comments`, data, { headers: { 'Content-Type': 'application/json' } }),\r\n  addComment: (postId, content) =>\r\n    api.post(`/posts/${postId}/comments`, { content }, { headers: { 'Content-Type': 'application/json' } }),\r\n};\r\n\r\n// Message endpoints\r\nexport const messages = {\r\n  getAll: () => api.get('/messages'),\r\n  getConversation: (userId) => api.get(`/messages/${userId}`),\r\n  send: (data) => api.post('/messages', data, { headers: { 'Content-Type': 'application/json' } }),\r\n  delete: (id) => api.delete(`/messages/${id}`),\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}