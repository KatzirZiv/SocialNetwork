{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katzi\\\\OneDrive\\\\\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD\\\\New folder (2)\\\\SocialNetwork\\\\EffiSocial\\\\client\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { Container, Box, Paper, Typography, TextField, Button, List, ListItem, ListItemAvatar, ListItemText, Avatar, Divider, CircularProgress, IconButton } from '@mui/material';\nimport { Send as SendIcon } from '@mui/icons-material';\nimport { messages, users } from '../services/api';\nimport { useAuth } from '../context/AuthContext';\nimport useSocket from '../hooks/useSocket';\nimport { useLocation, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  var _friendsData$data2, _messagesData$data;\n  const {\n    user: currentUser\n  } = useAuth();\n  const queryClient = useQueryClient();\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [message, setMessage] = useState('');\n  const messagesEndRef = useRef(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const location = useLocation();\n  const socket = useSocket(currentUser === null || currentUser === void 0 ? void 0 : currentUser._id);\n  const {\n    data: conversations,\n    isLoading: conversationsLoading\n  } = useQuery({\n    queryKey: ['conversations'],\n    queryFn: () => messages.getAll()\n  });\n  const {\n    data: messagesData,\n    isLoading: messagesLoading\n  } = useQuery({\n    queryKey: ['messages', selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id],\n    queryFn: () => messages.getConversation(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id),\n    enabled: !!selectedUser\n  });\n  const {\n    data: friendsData,\n    isLoading: friendsLoading\n  } = useQuery({\n    queryKey: ['friends', currentUser === null || currentUser === void 0 ? void 0 : currentUser._id],\n    queryFn: () => users.getFriends(currentUser._id),\n    enabled: !!(currentUser !== null && currentUser !== void 0 && currentUser._id)\n  });\n  const sendMessageMutation = useMutation({\n    mutationFn: data => messages.send(data),\n    onSuccess: () => {\n      queryClient.invalidateQueries(['messages', selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id]);\n    }\n  });\n  useEffect(() => {\n    if (socket) {\n      socket.on('user:online', users => {\n        setOnlineUsers(users);\n      });\n      socket.on('message:new', message => {\n        if (message.sender === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id) || message.receiver === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id)) {\n          queryClient.invalidateQueries(['messages', selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id]);\n        }\n        queryClient.invalidateQueries(['conversations']);\n      });\n      return () => {\n        socket.off('user:online');\n        socket.off('message:new');\n      };\n    }\n  }, [socket, selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messagesData]);\n\n  // Pre-select user if navigated from profile\n  useEffect(() => {\n    var _friendsData$data;\n    if (location.state && location.state.userId && friendsData && Array.isArray((_friendsData$data = friendsData.data) === null || _friendsData$data === void 0 ? void 0 : _friendsData$data.data)) {\n      const user = friendsData.data.data.find(f => f._id === location.state.userId);\n      if (user) {\n        setSelectedUser(user);\n      }\n    }\n    // eslint-disable-next-line\n  }, [location.state, friendsData]);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (message.trim() && selectedUser) {\n      sendMessageMutation.mutate({\n        receiver: selectedUser._id,\n        content: message\n      });\n      setMessage('');\n    }\n  };\n  if (conversationsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      height: 'calc(100vh - 100px)'\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        height: '100%',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          width: 300,\n          overflow: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: (Array.isArray(friendsData === null || friendsData === void 0 ? void 0 : (_friendsData$data2 = friendsData.data) === null || _friendsData$data2 === void 0 ? void 0 : _friendsData$data2.data) ? friendsData.data.data : []).map(friend => {\n            var _conversation$lastMes;\n            // Find conversation with this friend\n            const conversation = (Array.isArray(conversations === null || conversations === void 0 ? void 0 : conversations.data) ? conversations.data : []).find(c => c.participants.some(p => p._id === friend._id));\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              selected: (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id) === friend._id,\n              onClick: () => setSelectedUser(friend),\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    position: 'relative'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                    src: friend.profilePicture,\n                    alt: friend.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 23\n                  }, this), onlineUsers.includes(friend._id) && /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      position: 'absolute',\n                      bottom: 0,\n                      right: 0,\n                      width: 12,\n                      height: 12,\n                      bgcolor: 'success.main',\n                      borderRadius: '50%',\n                      border: '2px solid white'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: friend.username,\n                secondary: (conversation === null || conversation === void 0 ? void 0 : (_conversation$lastMes = conversation.lastMessage) === null || _conversation$lastMes === void 0 ? void 0 : _conversation$lastMes.content) || 'Start a new chat'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this)]\n            }, friend._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          flexGrow: 1,\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              borderBottom: 1,\n              borderColor: 'divider',\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              src: selectedUser.profilePicture,\n              alt: selectedUser.username,\n              sx: {\n                mr: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/profile/${selectedUser._id}`,\n                  style: {\n                    textDecoration: 'none',\n                    color: 'inherit',\n                    fontWeight: 500\n                  },\n                  children: selectedUser.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                children: onlineUsers.includes(selectedUser._id) ? 'Online' : 'Offline'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              overflow: 'auto',\n              p: 2,\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 1\n            },\n            children: [messagesLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this) : (Array.isArray(messagesData === null || messagesData === void 0 ? void 0 : (_messagesData$data = messagesData.data) === null || _messagesData$data === void 0 ? void 0 : _messagesData$data.data) ? messagesData.data.data : []).map(msg => {\n              var _msg$sender;\n              const isOwn = msg.sender === currentUser._id || ((_msg$sender = msg.sender) === null || _msg$sender === void 0 ? void 0 : _msg$sender._id) === currentUser._id;\n              const sender = isOwn ? currentUser : selectedUser;\n              return /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: isOwn ? 'flex-start' : 'flex-end',\n                  alignItems: 'center',\n                  mb: 1\n                },\n                children: [!isOwn && /*#__PURE__*/_jsxDEV(Avatar, {\n                  src: selectedUser.profilePicture,\n                  alt: selectedUser.username,\n                  sx: {\n                    mr: 1,\n                    width: 32,\n                    height: 32\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Paper, {\n                  sx: {\n                    p: 1,\n                    maxWidth: '70%',\n                    bgcolor: isOwn ? 'primary.main' : 'grey.100',\n                    color: isOwn ? 'primary.contrastText' : 'text.primary'\n                  },\n                  children: [!isOwn && /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    sx: {\n                      mb: 0.5\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/profile/${selectedUser._id}`,\n                      style: {\n                        textDecoration: 'none',\n                        color: 'inherit',\n                        fontWeight: 500\n                      },\n                      children: selectedUser.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 238,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: msg.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    children: new Date(msg.createdAt).toLocaleTimeString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 25\n                }, this), isOwn && /*#__PURE__*/_jsxDEV(Avatar, {\n                  src: currentUser.profilePicture,\n                  alt: currentUser.username,\n                  sx: {\n                    ml: 1,\n                    width: 32,\n                    height: 32\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 27\n                }, this)]\n              }, msg._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 23\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            onSubmit: handleSendMessage,\n            sx: {\n              p: 2,\n              borderTop: 1,\n              borderColor: 'divider',\n              display: 'flex',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              placeholder: \"Type a message...\",\n              value: message,\n              onChange: e => setMessage(e.target.value),\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              type: \"submit\",\n              color: \"primary\",\n              disabled: !message.trim() || sendMessageMutation.isLoading,\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"text.secondary\",\n            children: \"Select a conversation to start chatting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"JiAYe+JMOxsHH6QUHmyf6hs6gCY=\", false, function () {\n  return [useAuth, useQueryClient, useLocation, useSocket, useQuery, useQuery, useQuery, useMutation];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useQuery","useMutation","useQueryClient","Container","Box","Paper","Typography","TextField","Button","List","ListItem","ListItemAvatar","ListItemText","Avatar","Divider","CircularProgress","IconButton","Send","SendIcon","messages","users","useAuth","useSocket","useLocation","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","_friendsData$data2","_messagesData$data","user","currentUser","queryClient","selectedUser","setSelectedUser","message","setMessage","messagesEndRef","onlineUsers","setOnlineUsers","location","socket","_id","data","conversations","isLoading","conversationsLoading","queryKey","queryFn","getAll","messagesData","messagesLoading","getConversation","enabled","friendsData","friendsLoading","getFriends","sendMessageMutation","mutationFn","send","onSuccess","invalidateQueries","on","sender","receiver","off","_messagesEndRef$curre","current","scrollIntoView","behavior","_friendsData$data","state","userId","Array","isArray","find","f","handleSendMessage","e","preventDefault","trim","mutate","content","sx","display","justifyContent","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","height","gap","width","overflow","map","friend","_conversation$lastMes","conversation","c","participants","some","p","button","selected","onClick","position","src","profilePicture","alt","username","includes","bottom","right","bgcolor","borderRadius","border","primary","secondary","lastMessage","flexGrow","flexDirection","borderBottom","borderColor","alignItems","mr","variant","to","style","textDecoration","color","fontWeight","msg","_msg$sender","isOwn","mb","Date","createdAt","toLocaleTimeString","ml","ref","component","onSubmit","borderTop","fullWidth","placeholder","value","onChange","target","size","type","disabled","_c","$RefreshReg$"],"sources":["C:/Users/katzi/OneDrive/מסמכים/New folder (2)/SocialNetwork/EffiSocial/client/src/pages/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport {\r\n  Container,\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  Divider,\r\n  CircularProgress,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport { Send as SendIcon } from '@mui/icons-material';\r\nimport { messages, users } from '../services/api';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport useSocket from '../hooks/useSocket';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n\r\nconst Chat = () => {\r\n  const { user: currentUser } = useAuth();\r\n  const queryClient = useQueryClient();\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const location = useLocation();\r\n\r\n  const socket = useSocket(currentUser?._id);\r\n\r\n  const { data: conversations, isLoading: conversationsLoading } = useQuery({\r\n    queryKey: ['conversations'],\r\n    queryFn: () => messages.getAll(),\r\n  });\r\n\r\n  const { data: messagesData, isLoading: messagesLoading } = useQuery({\r\n    queryKey: ['messages', selectedUser?._id],\r\n    queryFn: () => messages.getConversation(selectedUser?._id),\r\n    enabled: !!selectedUser,\r\n  });\r\n\r\n  const { data: friendsData, isLoading: friendsLoading } = useQuery({\r\n    queryKey: ['friends', currentUser?._id],\r\n    queryFn: () => users.getFriends(currentUser._id),\r\n    enabled: !!currentUser?._id,\r\n  });\r\n\r\n  const sendMessageMutation = useMutation({\r\n    mutationFn: (data) => messages.send(data),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['messages', selectedUser?._id]);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('user:online', (users) => {\r\n        setOnlineUsers(users);\r\n      });\r\n\r\n      socket.on('message:new', (message) => {\r\n        if (message.sender === selectedUser?._id || message.receiver === selectedUser?._id) {\r\n          queryClient.invalidateQueries(['messages', selectedUser?._id]);\r\n        }\r\n        queryClient.invalidateQueries(['conversations']);\r\n      });\r\n\r\n      return () => {\r\n        socket.off('user:online');\r\n        socket.off('message:new');\r\n      };\r\n    }\r\n  }, [socket, selectedUser?._id]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messagesData]);\r\n\r\n  // Pre-select user if navigated from profile\r\n  useEffect(() => {\r\n    if (location.state && location.state.userId && friendsData && Array.isArray(friendsData.data?.data)) {\r\n      const user = friendsData.data.data.find(f => f._id === location.state.userId);\r\n      if (user) {\r\n        setSelectedUser(user);\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [location.state, friendsData]);\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (message.trim() && selectedUser) {\r\n      sendMessageMutation.mutate({\r\n        receiver: selectedUser._id,\r\n        content: message,\r\n      });\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  if (conversationsLoading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ height: 'calc(100vh - 100px)' }}>\r\n      <Box sx={{ display: 'flex', height: '100%', gap: 2 }}>\r\n        {/* Conversations List */}\r\n        <Paper sx={{ width: 300, overflow: 'auto' }}>\r\n          <List>\r\n            {(Array.isArray(friendsData?.data?.data) ? friendsData.data.data : []).map((friend) => {\r\n              // Find conversation with this friend\r\n              const conversation = (Array.isArray(conversations?.data) ? conversations.data : []).find(c =>\r\n                c.participants.some(p => p._id === friend._id)\r\n              );\r\n              return (\r\n                <ListItem\r\n                  key={friend._id}\r\n                  button\r\n                  selected={selectedUser?._id === friend._id}\r\n                  onClick={() => setSelectedUser(friend)}\r\n                >\r\n                  <ListItemAvatar>\r\n                    <Box sx={{ position: 'relative' }}>\r\n                      <Avatar src={friend.profilePicture} alt={friend.username} />\r\n                      {onlineUsers.includes(friend._id) && (\r\n                        <Box\r\n                          sx={{\r\n                            position: 'absolute',\r\n                            bottom: 0,\r\n                            right: 0,\r\n                            width: 12,\r\n                            height: 12,\r\n                            bgcolor: 'success.main',\r\n                            borderRadius: '50%',\r\n                            border: '2px solid white',\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </Box>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={friend.username}\r\n                    secondary={conversation?.lastMessage?.content || 'Start a new chat'}\r\n                  />\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </Paper>\r\n\r\n        {/* Chat Area */}\r\n        <Paper sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\r\n          {selectedUser ? (\r\n            <>\r\n              {/* Chat Header */}\r\n              <Box\r\n                sx={{\r\n                  p: 2,\r\n                  borderBottom: 1,\r\n                  borderColor: 'divider',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <Avatar\r\n                  src={selectedUser.profilePicture}\r\n                  alt={selectedUser.username}\r\n                  sx={{ mr: 2 }}\r\n                />\r\n                <Box>\r\n                  <Typography variant=\"subtitle1\">\r\n                    <Link to={`/profile/${selectedUser._id}`} style={{ textDecoration: 'none', color: 'inherit', fontWeight: 500 }}>\r\n                      {selectedUser.username}\r\n                    </Link>\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"text.secondary\">\r\n                    {onlineUsers.includes(selectedUser._id)\r\n                      ? 'Online'\r\n                      : 'Offline'}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n\r\n              {/* Messages */}\r\n              <Box\r\n                sx={{\r\n                  flexGrow: 1,\r\n                  overflow: 'auto',\r\n                  p: 2,\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  gap: 1,\r\n                }}\r\n              >\r\n                {messagesLoading ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  (Array.isArray(messagesData?.data?.data) ? messagesData.data.data : []).map((msg) => {\r\n                    const isOwn = msg.sender === currentUser._id || msg.sender?._id === currentUser._id;\r\n                    const sender = isOwn ? currentUser : selectedUser;\r\n                    return (\r\n                      <Box\r\n                        key={msg._id}\r\n                        sx={{\r\n                          display: 'flex',\r\n                          justifyContent: isOwn ? 'flex-start' : 'flex-end',\r\n                          alignItems: 'center',\r\n                          mb: 1,\r\n                        }}\r\n                      >\r\n                        {!isOwn && (\r\n                          <Avatar\r\n                            src={selectedUser.profilePicture}\r\n                            alt={selectedUser.username}\r\n                            sx={{ mr: 1, width: 32, height: 32 }}\r\n                          />\r\n                        )}\r\n                        <Paper\r\n                          sx={{\r\n                            p: 1,\r\n                            maxWidth: '70%',\r\n                            bgcolor: isOwn ? 'primary.main' : 'grey.100',\r\n                            color: isOwn ? 'primary.contrastText' : 'text.primary',\r\n                          }}\r\n                        >\r\n                          {!isOwn && (\r\n                            <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\r\n                              <Link to={`/profile/${selectedUser._id}`} style={{ textDecoration: 'none', color: 'inherit', fontWeight: 500 }}>\r\n                                {selectedUser.username}\r\n                              </Link>\r\n                            </Typography>\r\n                          )}\r\n                          <Typography variant=\"body1\">{msg.content}</Typography>\r\n                          <Typography variant=\"caption\" color=\"text.secondary\">\r\n                            {new Date(msg.createdAt).toLocaleTimeString()}\r\n                          </Typography>\r\n                        </Paper>\r\n                        {isOwn && (\r\n                          <Avatar\r\n                            src={currentUser.profilePicture}\r\n                            alt={currentUser.username}\r\n                            sx={{ ml: 1, width: 32, height: 32 }}\r\n                          />\r\n                        )}\r\n                      </Box>\r\n                    );\r\n                  })\r\n                )}\r\n                <div ref={messagesEndRef} />\r\n              </Box>\r\n\r\n              {/* Message Input */}\r\n              <Box\r\n                component=\"form\"\r\n                onSubmit={handleSendMessage}\r\n                sx={{\r\n                  p: 2,\r\n                  borderTop: 1,\r\n                  borderColor: 'divider',\r\n                  display: 'flex',\r\n                  gap: 1,\r\n                }}\r\n              >\r\n                <TextField\r\n                  fullWidth\r\n                  placeholder=\"Type a message...\"\r\n                  value={message}\r\n                  onChange={(e) => setMessage(e.target.value)}\r\n                  size=\"small\"\r\n                />\r\n                <IconButton\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  disabled={!message.trim() || sendMessageMutation.isLoading}\r\n                >\r\n                  <SendIcon />\r\n                </IconButton>\r\n              </Box>\r\n            </>\r\n          ) : (\r\n            <Box\r\n              sx={{\r\n                height: '100%',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" color=\"text.secondary\">\r\n                Select a conversation to start chatting\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </Paper>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}