{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katzi\\\\OneDrive\\\\\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD\\\\New folder (2)\\\\SocialNetwork\\\\EffiSocial\\\\client\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { Container, Box, Paper, Typography, TextField, Button, List, ListItem, ListItemAvatar, ListItemText, Avatar, Divider, CircularProgress, IconButton } from '@mui/material';\nimport { Send as SendIcon } from '@mui/icons-material';\nimport { messages, users } from '../services/api';\nimport { useAuth } from '../context/AuthContext';\nimport useSocket from '../hooks/useSocket';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  var _messagesData$data;\n  const {\n    user: currentUser\n  } = useAuth();\n  const queryClient = useQueryClient();\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [message, setMessage] = useState('');\n  const messagesEndRef = useRef(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const socket = useSocket(currentUser === null || currentUser === void 0 ? void 0 : currentUser._id);\n  const {\n    data: conversations,\n    isLoading: conversationsLoading\n  } = useQuery({\n    queryKey: ['conversations'],\n    queryFn: () => messages.getAll()\n  });\n  const {\n    data: messagesData,\n    isLoading: messagesLoading\n  } = useQuery({\n    queryKey: ['messages', selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id],\n    queryFn: () => messages.getConversation(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id),\n    enabled: !!selectedUser\n  });\n  const {\n    data: friendsData,\n    isLoading: friendsLoading\n  } = useQuery({\n    queryKey: ['friends', currentUser === null || currentUser === void 0 ? void 0 : currentUser._id],\n    queryFn: () => users.getFriends(currentUser._id),\n    enabled: !!(currentUser !== null && currentUser !== void 0 && currentUser._id)\n  });\n  const sendMessageMutation = useMutation({\n    mutationFn: data => messages.send(data),\n    onSuccess: () => {\n      queryClient.invalidateQueries(['messages', selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id]);\n    }\n  });\n  useEffect(() => {\n    if (socket) {\n      socket.on('user:online', users => {\n        setOnlineUsers(users);\n      });\n      socket.on('message:new', message => {\n        if (message.sender === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id) || message.receiver === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id)) {\n          queryClient.invalidateQueries(['messages', selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id]);\n        }\n        queryClient.invalidateQueries(['conversations']);\n      });\n      return () => {\n        socket.off('user:online');\n        socket.off('message:new');\n      };\n    }\n  }, [socket, selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messagesData]);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (message.trim() && selectedUser) {\n      sendMessageMutation.mutate({\n        receiver: selectedUser._id,\n        content: message\n      });\n      setMessage('');\n    }\n  };\n  if (conversationsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      height: 'calc(100vh - 100px)'\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        height: '100%',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          width: 300,\n          overflow: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: (Array.isArray(friendsData === null || friendsData === void 0 ? void 0 : friendsData.data) ? friendsData.data : []).map(friend => {\n            var _conversation$lastMes;\n            // Find conversation with this friend\n            const conversation = (Array.isArray(conversations === null || conversations === void 0 ? void 0 : conversations.data) ? conversations.data : []).find(c => c.participants.some(p => p._id === friend._id));\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              selected: (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id) === friend._id,\n              onClick: () => setSelectedUser(friend),\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    position: 'relative'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                    src: friend.profilePicture,\n                    alt: friend.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 23\n                  }, this), onlineUsers.includes(friend._id) && /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      position: 'absolute',\n                      bottom: 0,\n                      right: 0,\n                      width: 12,\n                      height: 12,\n                      bgcolor: 'success.main',\n                      borderRadius: '50%',\n                      border: '2px solid white'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: friend.username,\n                secondary: (conversation === null || conversation === void 0 ? void 0 : (_conversation$lastMes = conversation.lastMessage) === null || _conversation$lastMes === void 0 ? void 0 : _conversation$lastMes.content) || 'Start a new chat'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)]\n            }, friend._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          flexGrow: 1,\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              borderBottom: 1,\n              borderColor: 'divider',\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              src: selectedUser.avatar,\n              alt: selectedUser.username,\n              sx: {\n                mr: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: selectedUser.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                children: onlineUsers.includes(selectedUser._id) ? 'Online' : 'Offline'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              overflow: 'auto',\n              p: 2,\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 1\n            },\n            children: [messagesLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this) : messagesData === null || messagesData === void 0 ? void 0 : (_messagesData$data = messagesData.data) === null || _messagesData$data === void 0 ? void 0 : _messagesData$data.map(msg => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: msg.sender === currentUser._id ? 'flex-end' : 'flex-start'\n              },\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                sx: {\n                  p: 1,\n                  maxWidth: '70%',\n                  bgcolor: msg.sender === currentUser._id ? 'primary.main' : 'grey.100',\n                  color: msg.sender === currentUser._id ? 'primary.contrastText' : 'text.primary'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: msg.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  children: new Date(msg.createdAt).toLocaleTimeString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 23\n              }, this)\n            }, msg._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            onSubmit: handleSendMessage,\n            sx: {\n              p: 2,\n              borderTop: 1,\n              borderColor: 'divider',\n              display: 'flex',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              placeholder: \"Type a message...\",\n              value: message,\n              onChange: e => setMessage(e.target.value),\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              type: \"submit\",\n              color: \"primary\",\n              disabled: !message.trim() || sendMessageMutation.isLoading,\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"text.secondary\",\n            children: \"Select a conversation to start chatting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"v4CpzSiJ+eGJonrNJjIqFyHOZZI=\", false, function () {\n  return [useAuth, useQueryClient, useSocket, useQuery, useQuery, useQuery, useMutation];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useQuery","useMutation","useQueryClient","Container","Box","Paper","Typography","TextField","Button","List","ListItem","ListItemAvatar","ListItemText","Avatar","Divider","CircularProgress","IconButton","Send","SendIcon","messages","users","useAuth","useSocket","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","_messagesData$data","user","currentUser","queryClient","selectedUser","setSelectedUser","message","setMessage","messagesEndRef","onlineUsers","setOnlineUsers","socket","_id","data","conversations","isLoading","conversationsLoading","queryKey","queryFn","getAll","messagesData","messagesLoading","getConversation","enabled","friendsData","friendsLoading","getFriends","sendMessageMutation","mutationFn","send","onSuccess","invalidateQueries","on","sender","receiver","off","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","mutate","content","sx","display","justifyContent","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","height","gap","width","overflow","Array","isArray","map","friend","_conversation$lastMes","conversation","find","c","participants","some","p","button","selected","onClick","position","src","profilePicture","alt","username","includes","bottom","right","bgcolor","borderRadius","border","primary","secondary","lastMessage","flexGrow","flexDirection","borderBottom","borderColor","alignItems","avatar","mr","variant","color","msg","Date","createdAt","toLocaleTimeString","ref","component","onSubmit","borderTop","fullWidth","placeholder","value","onChange","target","size","type","disabled","_c","$RefreshReg$"],"sources":["C:/Users/katzi/OneDrive/מסמכים/New folder (2)/SocialNetwork/EffiSocial/client/src/pages/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport {\r\n  Container,\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  Divider,\r\n  CircularProgress,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport { Send as SendIcon } from '@mui/icons-material';\r\nimport { messages, users } from '../services/api';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport useSocket from '../hooks/useSocket';\r\n\r\nconst Chat = () => {\r\n  const { user: currentUser } = useAuth();\r\n  const queryClient = useQueryClient();\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n\r\n  const socket = useSocket(currentUser?._id);\r\n\r\n  const { data: conversations, isLoading: conversationsLoading } = useQuery({\r\n    queryKey: ['conversations'],\r\n    queryFn: () => messages.getAll(),\r\n  });\r\n\r\n  const { data: messagesData, isLoading: messagesLoading } = useQuery({\r\n    queryKey: ['messages', selectedUser?._id],\r\n    queryFn: () => messages.getConversation(selectedUser?._id),\r\n    enabled: !!selectedUser,\r\n  });\r\n\r\n  const { data: friendsData, isLoading: friendsLoading } = useQuery({\r\n    queryKey: ['friends', currentUser?._id],\r\n    queryFn: () => users.getFriends(currentUser._id),\r\n    enabled: !!currentUser?._id,\r\n  });\r\n\r\n  const sendMessageMutation = useMutation({\r\n    mutationFn: (data) => messages.send(data),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['messages', selectedUser?._id]);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('user:online', (users) => {\r\n        setOnlineUsers(users);\r\n      });\r\n\r\n      socket.on('message:new', (message) => {\r\n        if (message.sender === selectedUser?._id || message.receiver === selectedUser?._id) {\r\n          queryClient.invalidateQueries(['messages', selectedUser?._id]);\r\n        }\r\n        queryClient.invalidateQueries(['conversations']);\r\n      });\r\n\r\n      return () => {\r\n        socket.off('user:online');\r\n        socket.off('message:new');\r\n      };\r\n    }\r\n  }, [socket, selectedUser?._id]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messagesData]);\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (message.trim() && selectedUser) {\r\n      sendMessageMutation.mutate({\r\n        receiver: selectedUser._id,\r\n        content: message,\r\n      });\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  if (conversationsLoading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ height: 'calc(100vh - 100px)' }}>\r\n      <Box sx={{ display: 'flex', height: '100%', gap: 2 }}>\r\n        {/* Conversations List */}\r\n        <Paper sx={{ width: 300, overflow: 'auto' }}>\r\n          <List>\r\n            {(Array.isArray(friendsData?.data) ? friendsData.data : []).map((friend) => {\r\n              // Find conversation with this friend\r\n              const conversation = (Array.isArray(conversations?.data) ? conversations.data : []).find(c =>\r\n                c.participants.some(p => p._id === friend._id)\r\n              );\r\n              return (\r\n                <ListItem\r\n                  key={friend._id}\r\n                  button\r\n                  selected={selectedUser?._id === friend._id}\r\n                  onClick={() => setSelectedUser(friend)}\r\n                >\r\n                  <ListItemAvatar>\r\n                    <Box sx={{ position: 'relative' }}>\r\n                      <Avatar src={friend.profilePicture} alt={friend.username} />\r\n                      {onlineUsers.includes(friend._id) && (\r\n                        <Box\r\n                          sx={{\r\n                            position: 'absolute',\r\n                            bottom: 0,\r\n                            right: 0,\r\n                            width: 12,\r\n                            height: 12,\r\n                            bgcolor: 'success.main',\r\n                            borderRadius: '50%',\r\n                            border: '2px solid white',\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </Box>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={friend.username}\r\n                    secondary={conversation?.lastMessage?.content || 'Start a new chat'}\r\n                  />\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </Paper>\r\n\r\n        {/* Chat Area */}\r\n        <Paper sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\r\n          {selectedUser ? (\r\n            <>\r\n              {/* Chat Header */}\r\n              <Box\r\n                sx={{\r\n                  p: 2,\r\n                  borderBottom: 1,\r\n                  borderColor: 'divider',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <Avatar\r\n                  src={selectedUser.avatar}\r\n                  alt={selectedUser.username}\r\n                  sx={{ mr: 2 }}\r\n                />\r\n                <Box>\r\n                  <Typography variant=\"subtitle1\">\r\n                    {selectedUser.username}\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"text.secondary\">\r\n                    {onlineUsers.includes(selectedUser._id)\r\n                      ? 'Online'\r\n                      : 'Offline'}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n\r\n              {/* Messages */}\r\n              <Box\r\n                sx={{\r\n                  flexGrow: 1,\r\n                  overflow: 'auto',\r\n                  p: 2,\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  gap: 1,\r\n                }}\r\n              >\r\n                {messagesLoading ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  messagesData?.data?.map((msg) => (\r\n                    <Box\r\n                      key={msg._id}\r\n                      sx={{\r\n                        display: 'flex',\r\n                        justifyContent:\r\n                          msg.sender === currentUser._id ? 'flex-end' : 'flex-start',\r\n                      }}\r\n                    >\r\n                      <Paper\r\n                        sx={{\r\n                          p: 1,\r\n                          maxWidth: '70%',\r\n                          bgcolor:\r\n                            msg.sender === currentUser._id\r\n                              ? 'primary.main'\r\n                              : 'grey.100',\r\n                          color:\r\n                            msg.sender === currentUser._id\r\n                              ? 'primary.contrastText'\r\n                              : 'text.primary',\r\n                        }}\r\n                      >\r\n                        <Typography variant=\"body1\">{msg.content}</Typography>\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                          {new Date(msg.createdAt).toLocaleTimeString()}\r\n                        </Typography>\r\n                      </Paper>\r\n                    </Box>\r\n                  ))\r\n                )}\r\n                <div ref={messagesEndRef} />\r\n              </Box>\r\n\r\n              {/* Message Input */}\r\n              <Box\r\n                component=\"form\"\r\n                onSubmit={handleSendMessage}\r\n                sx={{\r\n                  p: 2,\r\n                  borderTop: 1,\r\n                  borderColor: 'divider',\r\n                  display: 'flex',\r\n                  gap: 1,\r\n                }}\r\n              >\r\n                <TextField\r\n                  fullWidth\r\n                  placeholder=\"Type a message...\"\r\n                  value={message}\r\n                  onChange={(e) => setMessage(e.target.value)}\r\n                  size=\"small\"\r\n                />\r\n                <IconButton\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  disabled={!message.trim() || sendMessageMutation.isLoading}\r\n                >\r\n                  <SendIcon />\r\n                </IconButton>\r\n              </Box>\r\n            </>\r\n          ) : (\r\n            <Box\r\n              sx={{\r\n                height: '100%',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" color=\"text.secondary\">\r\n                Select a conversation to start chatting\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </Paper>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}