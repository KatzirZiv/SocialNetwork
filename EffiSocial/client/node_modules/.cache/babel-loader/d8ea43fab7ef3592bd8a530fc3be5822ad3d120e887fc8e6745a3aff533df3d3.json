{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katzi\\\\OneDrive\\\\\\u05DE\\u05E1\\u05DE\\u05DB\\u05D9\\u05DD\\\\New folder (2)\\\\SocialNetwork\\\\EffiSocial\\\\client\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { Container, Box, Paper, Typography, TextField, Button, List, ListItem, ListItemAvatar, ListItemText, Avatar, Divider, CircularProgress, IconButton } from '@mui/material';\nimport { Send as SendIcon } from '@mui/icons-material';\nimport { messages, users } from '../services/api';\nimport { useAuth } from '../context/AuthContext';\nimport useSocket from '../hooks/useSocket';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  var _conversations$data, _messagesData$data;\n  const {\n    user: currentUser\n  } = useAuth();\n  const queryClient = useQueryClient();\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [message, setMessage] = useState('');\n  const messagesEndRef = useRef(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const socket = useSocket(currentUser === null || currentUser === void 0 ? void 0 : currentUser._id);\n  const {\n    data: conversations,\n    isLoading: conversationsLoading\n  } = useQuery({\n    queryKey: ['conversations'],\n    queryFn: () => messages.getAll()\n  });\n  const {\n    data: messagesData,\n    isLoading: messagesLoading\n  } = useQuery({\n    queryKey: ['messages', selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id],\n    queryFn: () => messages.getConversation(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id),\n    enabled: !!selectedUser\n  });\n  const sendMessageMutation = useMutation({\n    mutationFn: data => messages.send(data),\n    onSuccess: () => {\n      queryClient.invalidateQueries(['messages', selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id]);\n    }\n  });\n  useEffect(() => {\n    if (socket) {\n      socket.on('user:online', users => {\n        setOnlineUsers(users);\n      });\n      socket.on('message:new', message => {\n        if (message.sender === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id) || message.receiver === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id)) {\n          queryClient.invalidateQueries(['messages', selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id]);\n        }\n        queryClient.invalidateQueries(['conversations']);\n      });\n      return () => {\n        socket.off('user:online');\n        socket.off('message:new');\n      };\n    }\n  }, [socket, selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messagesData]);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (message.trim() && selectedUser) {\n      sendMessageMutation.mutate({\n        receiver: selectedUser._id,\n        content: message\n      });\n      setMessage('');\n    }\n  };\n  if (conversationsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      height: 'calc(100vh - 100px)'\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        height: '100%',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          width: 300,\n          overflow: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: conversations === null || conversations === void 0 ? void 0 : (_conversations$data = conversations.data) === null || _conversations$data === void 0 ? void 0 : _conversations$data.map(conversation => {\n            var _conversation$lastMes;\n            const otherUser = conversation.participants.find(p => p._id !== currentUser._id);\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              selected: (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id) === otherUser._id,\n              onClick: () => setSelectedUser(otherUser),\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    position: 'relative'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                    src: otherUser.avatar,\n                    alt: otherUser.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 23\n                  }, this), onlineUsers.includes(otherUser._id) && /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      position: 'absolute',\n                      bottom: 0,\n                      right: 0,\n                      width: 12,\n                      height: 12,\n                      bgcolor: 'success.main',\n                      borderRadius: '50%',\n                      border: '2px solid white'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: otherUser.username,\n                secondary: (_conversation$lastMes = conversation.lastMessage) === null || _conversation$lastMes === void 0 ? void 0 : _conversation$lastMes.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)]\n            }, conversation._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          flexGrow: 1,\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              borderBottom: 1,\n              borderColor: 'divider',\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              src: selectedUser.avatar,\n              alt: selectedUser.username,\n              sx: {\n                mr: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: selectedUser.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                children: onlineUsers.includes(selectedUser._id) ? 'Online' : 'Offline'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              overflow: 'auto',\n              p: 2,\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 1\n            },\n            children: [messagesLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this) : messagesData === null || messagesData === void 0 ? void 0 : (_messagesData$data = messagesData.data) === null || _messagesData$data === void 0 ? void 0 : _messagesData$data.map(msg => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: msg.sender === currentUser._id ? 'flex-end' : 'flex-start'\n              },\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                sx: {\n                  p: 1,\n                  maxWidth: '70%',\n                  bgcolor: msg.sender === currentUser._id ? 'primary.main' : 'grey.100',\n                  color: msg.sender === currentUser._id ? 'primary.contrastText' : 'text.primary'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: msg.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  children: new Date(msg.createdAt).toLocaleTimeString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 23\n              }, this)\n            }, msg._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            onSubmit: handleSendMessage,\n            sx: {\n              p: 2,\n              borderTop: 1,\n              borderColor: 'divider',\n              display: 'flex',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              placeholder: \"Type a message...\",\n              value: message,\n              onChange: e => setMessage(e.target.value),\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              type: \"submit\",\n              color: \"primary\",\n              disabled: !message.trim() || sendMessageMutation.isLoading,\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"text.secondary\",\n            children: \"Select a conversation to start chatting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"zrSI8WPjNHhmFwXvNxFix3XO3bE=\", false, function () {\n  return [useAuth, useQueryClient, useSocket, useQuery, useQuery, useMutation];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useQuery","useMutation","useQueryClient","Container","Box","Paper","Typography","TextField","Button","List","ListItem","ListItemAvatar","ListItemText","Avatar","Divider","CircularProgress","IconButton","Send","SendIcon","messages","users","useAuth","useSocket","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","_conversations$data","_messagesData$data","user","currentUser","queryClient","selectedUser","setSelectedUser","message","setMessage","messagesEndRef","onlineUsers","setOnlineUsers","socket","_id","data","conversations","isLoading","conversationsLoading","queryKey","queryFn","getAll","messagesData","messagesLoading","getConversation","enabled","sendMessageMutation","mutationFn","send","onSuccess","invalidateQueries","on","sender","receiver","off","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","mutate","content","sx","display","justifyContent","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","height","gap","width","overflow","map","conversation","_conversation$lastMes","otherUser","participants","find","p","button","selected","onClick","position","src","avatar","alt","username","includes","bottom","right","bgcolor","borderRadius","border","primary","secondary","lastMessage","flexGrow","flexDirection","borderBottom","borderColor","alignItems","mr","variant","color","msg","Date","createdAt","toLocaleTimeString","ref","component","onSubmit","borderTop","fullWidth","placeholder","value","onChange","target","size","type","disabled","_c","$RefreshReg$"],"sources":["C:/Users/katzi/OneDrive/מסמכים/New folder (2)/SocialNetwork/EffiSocial/client/src/pages/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport {\r\n  Container,\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  Divider,\r\n  CircularProgress,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport { Send as SendIcon } from '@mui/icons-material';\r\nimport { messages, users } from '../services/api';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport useSocket from '../hooks/useSocket';\r\n\r\nconst Chat = () => {\r\n  const { user: currentUser } = useAuth();\r\n  const queryClient = useQueryClient();\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n\r\n  const socket = useSocket(currentUser?._id);\r\n\r\n  const { data: conversations, isLoading: conversationsLoading } = useQuery({\r\n    queryKey: ['conversations'],\r\n    queryFn: () => messages.getAll(),\r\n  });\r\n\r\n  const { data: messagesData, isLoading: messagesLoading } = useQuery({\r\n    queryKey: ['messages', selectedUser?._id],\r\n    queryFn: () => messages.getConversation(selectedUser?._id),\r\n    enabled: !!selectedUser,\r\n  });\r\n\r\n  const sendMessageMutation = useMutation({\r\n    mutationFn: (data) => messages.send(data),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(['messages', selectedUser?._id]);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('user:online', (users) => {\r\n        setOnlineUsers(users);\r\n      });\r\n\r\n      socket.on('message:new', (message) => {\r\n        if (message.sender === selectedUser?._id || message.receiver === selectedUser?._id) {\r\n          queryClient.invalidateQueries(['messages', selectedUser?._id]);\r\n        }\r\n        queryClient.invalidateQueries(['conversations']);\r\n      });\r\n\r\n      return () => {\r\n        socket.off('user:online');\r\n        socket.off('message:new');\r\n      };\r\n    }\r\n  }, [socket, selectedUser?._id]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messagesData]);\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (message.trim() && selectedUser) {\r\n      sendMessageMutation.mutate({\r\n        receiver: selectedUser._id,\r\n        content: message,\r\n      });\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  if (conversationsLoading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ height: 'calc(100vh - 100px)' }}>\r\n      <Box sx={{ display: 'flex', height: '100%', gap: 2 }}>\r\n        {/* Conversations List */}\r\n        <Paper sx={{ width: 300, overflow: 'auto' }}>\r\n          <List>\r\n            {conversations?.data?.map((conversation) => {\r\n              const otherUser = conversation.participants.find(\r\n                (p) => p._id !== currentUser._id\r\n              );\r\n              return (\r\n                <ListItem\r\n                  key={conversation._id}\r\n                  button\r\n                  selected={selectedUser?._id === otherUser._id}\r\n                  onClick={() => setSelectedUser(otherUser)}\r\n                >\r\n                  <ListItemAvatar>\r\n                    <Box sx={{ position: 'relative' }}>\r\n                      <Avatar src={otherUser.avatar} alt={otherUser.username} />\r\n                      {onlineUsers.includes(otherUser._id) && (\r\n                        <Box\r\n                          sx={{\r\n                            position: 'absolute',\r\n                            bottom: 0,\r\n                            right: 0,\r\n                            width: 12,\r\n                            height: 12,\r\n                            bgcolor: 'success.main',\r\n                            borderRadius: '50%',\r\n                            border: '2px solid white',\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </Box>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={otherUser.username}\r\n                    secondary={conversation.lastMessage?.content}\r\n                  />\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </Paper>\r\n\r\n        {/* Chat Area */}\r\n        <Paper sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\r\n          {selectedUser ? (\r\n            <>\r\n              {/* Chat Header */}\r\n              <Box\r\n                sx={{\r\n                  p: 2,\r\n                  borderBottom: 1,\r\n                  borderColor: 'divider',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                <Avatar\r\n                  src={selectedUser.avatar}\r\n                  alt={selectedUser.username}\r\n                  sx={{ mr: 2 }}\r\n                />\r\n                <Box>\r\n                  <Typography variant=\"subtitle1\">\r\n                    {selectedUser.username}\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"text.secondary\">\r\n                    {onlineUsers.includes(selectedUser._id)\r\n                      ? 'Online'\r\n                      : 'Offline'}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n\r\n              {/* Messages */}\r\n              <Box\r\n                sx={{\r\n                  flexGrow: 1,\r\n                  overflow: 'auto',\r\n                  p: 2,\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  gap: 1,\r\n                }}\r\n              >\r\n                {messagesLoading ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  messagesData?.data?.map((msg) => (\r\n                    <Box\r\n                      key={msg._id}\r\n                      sx={{\r\n                        display: 'flex',\r\n                        justifyContent:\r\n                          msg.sender === currentUser._id ? 'flex-end' : 'flex-start',\r\n                      }}\r\n                    >\r\n                      <Paper\r\n                        sx={{\r\n                          p: 1,\r\n                          maxWidth: '70%',\r\n                          bgcolor:\r\n                            msg.sender === currentUser._id\r\n                              ? 'primary.main'\r\n                              : 'grey.100',\r\n                          color:\r\n                            msg.sender === currentUser._id\r\n                              ? 'primary.contrastText'\r\n                              : 'text.primary',\r\n                        }}\r\n                      >\r\n                        <Typography variant=\"body1\">{msg.content}</Typography>\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                          {new Date(msg.createdAt).toLocaleTimeString()}\r\n                        </Typography>\r\n                      </Paper>\r\n                    </Box>\r\n                  ))\r\n                )}\r\n                <div ref={messagesEndRef} />\r\n              </Box>\r\n\r\n              {/* Message Input */}\r\n              <Box\r\n                component=\"form\"\r\n                onSubmit={handleSendMessage}\r\n                sx={{\r\n                  p: 2,\r\n                  borderTop: 1,\r\n                  borderColor: 'divider',\r\n                  display: 'flex',\r\n                  gap: 1,\r\n                }}\r\n              >\r\n                <TextField\r\n                  fullWidth\r\n                  placeholder=\"Type a message...\"\r\n                  value={message}\r\n                  onChange={(e) => setMessage(e.target.value)}\r\n                  size=\"small\"\r\n                />\r\n                <IconButton\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  disabled={!message.trim() || sendMessageMutation.isLoading}\r\n                >\r\n                  <SendIcon />\r\n                </IconButton>\r\n              </Box>\r\n            </>\r\n          ) : (\r\n            <Box\r\n              sx={{\r\n                height: '100%',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" color=\"text.secondary\">\r\n                Select a conversation to start chatting\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </Paper>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}