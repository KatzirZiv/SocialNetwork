{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport useSocket from './useSocket';\nconst useNotifications = userId => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const socket = useSocket(userId);\n  useEffect(() => {\n    if (socket) {\n      socket.on('notification:new', notification => {\n        console.log('[Notifications] Received notification:', notification);\n        setNotifications(prev => [notification, ...prev]);\n      });\n      return () => {\n        socket.off('notification:new');\n      };\n    }\n  }, [socket]);\n  const markAsRead = notificationId => {\n    setNotifications(prev => prev.map(notification => notification._id === notificationId ? {\n      ...notification,\n      read: true\n    } : notification));\n  };\n  const markAllAsRead = () => {\n    setNotifications(prev => prev.map(notification => ({\n      ...notification,\n      read: true\n    })));\n  };\n  const clearNotification = notificationId => {\n    setNotifications(prev => prev.filter(notification => notification._id !== notificationId));\n  };\n  const clearAllNotifications = () => {\n    setNotifications([]);\n  };\n  const unreadCount = notifications.filter(n => !n.read).length;\n  return {\n    notifications,\n    unreadCount,\n    markAsRead,\n    markAllAsRead,\n    clearNotification,\n    clearAllNotifications\n  };\n};\n_s(useNotifications, \"vEY4JNkiU0bDmE1WUAY7kPZOZns=\", false, function () {\n  return [useSocket];\n});\nexport default useNotifications;","map":{"version":3,"names":["useState","useEffect","useSocket","useNotifications","userId","_s","notifications","setNotifications","socket","on","notification","console","log","prev","off","markAsRead","notificationId","map","_id","read","markAllAsRead","clearNotification","filter","clearAllNotifications","unreadCount","n","length"],"sources":["C:/Users/katzi/OneDrive/מסמכים/New folder (2)/SocialNetwork/EffiSocial/client/src/hooks/useNotifications.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport useSocket from './useSocket';\r\n\r\nconst useNotifications = (userId) => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const socket = useSocket(userId);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('notification:new', (notification) => {\r\n        console.log('[Notifications] Received notification:', notification);\r\n        setNotifications((prev) => [notification, ...prev]);\r\n      });\r\n\r\n      return () => {\r\n        socket.off('notification:new');\r\n      };\r\n    }\r\n  }, [socket]);\r\n\r\n  const markAsRead = (notificationId) => {\r\n    setNotifications((prev) =>\r\n      prev.map((notification) =>\r\n        notification._id === notificationId\r\n          ? { ...notification, read: true }\r\n          : notification\r\n      )\r\n    );\r\n  };\r\n\r\n  const markAllAsRead = () => {\r\n    setNotifications((prev) =>\r\n      prev.map((notification) => ({ ...notification, read: true }))\r\n    );\r\n  };\r\n\r\n  const clearNotification = (notificationId) => {\r\n    setNotifications((prev) =>\r\n      prev.filter((notification) => notification._id !== notificationId)\r\n    );\r\n  };\r\n\r\n  const clearAllNotifications = () => {\r\n    setNotifications([]);\r\n  };\r\n\r\n  const unreadCount = notifications.filter((n) => !n.read).length;\r\n\r\n  return {\r\n    notifications,\r\n    unreadCount,\r\n    markAsRead,\r\n    markAllAsRead,\r\n    clearNotification,\r\n    clearAllNotifications,\r\n  };\r\n};\r\n\r\nexport default useNotifications; "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,aAAa;AAEnC,MAAMC,gBAAgB,GAAIC,MAAM,IAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMQ,MAAM,GAAGN,SAAS,CAACE,MAAM,CAAC;EAEhCH,SAAS,CAAC,MAAM;IACd,IAAIO,MAAM,EAAE;MACVA,MAAM,CAACC,EAAE,CAAC,kBAAkB,EAAGC,YAAY,IAAK;QAC9CC,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEF,YAAY,CAAC;QACnEH,gBAAgB,CAAEM,IAAI,IAAK,CAACH,YAAY,EAAE,GAAGG,IAAI,CAAC,CAAC;MACrD,CAAC,CAAC;MAEF,OAAO,MAAM;QACXL,MAAM,CAACM,GAAG,CAAC,kBAAkB,CAAC;MAChC,CAAC;IACH;EACF,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;EAEZ,MAAMO,UAAU,GAAIC,cAAc,IAAK;IACrCT,gBAAgB,CAAEM,IAAI,IACpBA,IAAI,CAACI,GAAG,CAAEP,YAAY,IACpBA,YAAY,CAACQ,GAAG,KAAKF,cAAc,GAC/B;MAAE,GAAGN,YAAY;MAAES,IAAI,EAAE;IAAK,CAAC,GAC/BT,YACN,CACF,CAAC;EACH,CAAC;EAED,MAAMU,aAAa,GAAGA,CAAA,KAAM;IAC1Bb,gBAAgB,CAAEM,IAAI,IACpBA,IAAI,CAACI,GAAG,CAAEP,YAAY,KAAM;MAAE,GAAGA,YAAY;MAAES,IAAI,EAAE;IAAK,CAAC,CAAC,CAC9D,CAAC;EACH,CAAC;EAED,MAAME,iBAAiB,GAAIL,cAAc,IAAK;IAC5CT,gBAAgB,CAAEM,IAAI,IACpBA,IAAI,CAACS,MAAM,CAAEZ,YAAY,IAAKA,YAAY,CAACQ,GAAG,KAAKF,cAAc,CACnE,CAAC;EACH,CAAC;EAED,MAAMO,qBAAqB,GAAGA,CAAA,KAAM;IAClChB,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;EAED,MAAMiB,WAAW,GAAGlB,aAAa,CAACgB,MAAM,CAAEG,CAAC,IAAK,CAACA,CAAC,CAACN,IAAI,CAAC,CAACO,MAAM;EAE/D,OAAO;IACLpB,aAAa;IACbkB,WAAW;IACXT,UAAU;IACVK,aAAa;IACbC,iBAAiB;IACjBE;EACF,CAAC;AACH,CAAC;AAAClB,EAAA,CArDIF,gBAAgB;EAAA,QAELD,SAAS;AAAA;AAqD1B,eAAeC,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}